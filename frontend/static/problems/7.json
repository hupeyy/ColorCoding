{
  "id": 7,
  "title": "Minimum Window Substring",
  "description": "Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string ''.\n\nThe testcases will be generated such that the answer is unique.\n\nA substring is a contiguous sequence of characters within the string.",
  "difficulty": "hard",
  "testCases": [
    {
      "input": [
        "ADOBECODEBANC",
        "ABC"
      ],
      "output": "BANC"
    },
    {
      "input": [
        "a",
        "a"
      ],
      "output": "a"
    },
    {
      "input": [
        "a",
        "aa"
      ],
      "output": ""
    },
    {
      "input": [
        "ab",
        "b"
      ],
      "output": "b"
    },
    {
      "input": [
        "bba",
        "ab"
      ],
      "output": "ba"
    },
    {
      "input": [
        "ADOBECODEBANC",
        "ABBC"
      ],
      "output": "BANC"
    },
    {
      "input": [
        "aaaaaaaaaaaabbbbbcdd",
        "abcdd"
      ],
      "output": "abbbbbcdd"
    },
    {
      "input": [
        "a",
        "b"
      ],
      "output": ""
    },
    {
      "input": [
        "cabwefgewcwaefgcf",
        "cae"
      ],
      "output": "cwae"
    },
    {
      "input": [
        "aaflslflsldkalskaaa",
        "aaa"
      ],
      "output": "aaa"
    }
  ],
  "passed": 0,
  "code": {
    "python": "def solution(s, t):\n\t# Your code here\n\tpass"
  }
}